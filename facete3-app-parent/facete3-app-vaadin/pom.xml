<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>facete3-app-vaadin</artifactId>
	<!-- <packaging>${packaging.type}</packaging> -->
	<packaging>jar</packaging>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<packaging.type>jar</packaging.type>
		<vaadin.version>14.10.1</vaadin.version>
		<spring.version>5.3.1</spring.version>
		<spring-boot.version>2.3.3.RELEASE</spring-boot.version>
		<drivers.dir>${project.basedir}/drivers</drivers.dir>
		<drivers.downloader.phase>pre-integration-test</drivers.downloader.phase>
	</properties>
	<parent>
		<groupId>org.hobbit</groupId>
		<artifactId>facete3-app-parent</artifactId>
		<version>1.3.0-SNAPSHOT</version>
	</parent>
	<repositories>
		<!-- The order of definitions matters. Explicitly defining central here 
			to make sure it has the highest priority. -->
		<!-- Main Maven repository -->
		<repository>
			<id>central</id>
			<url>https://repo.maven.apache.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!-- Repository used by many Vaadin add-ons -->
		<repository>
			<id>Vaadin Directory</id>
			<url>https://maven.vaadin.com/vaadin-addons</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<!-- Main Maven repository -->
		<pluginRepository>
			<id>central</id>
			<url>https://repo.maven.apache.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<dependencyManagement>
		<dependencies>
			<!-- <dependency> -->
			<!-- <groupId>org.springframework.boot</groupId> -->
			<!-- <artifactId>spring-boot-starter-parent</artifactId> -->
			<!-- <version>2.2.0.RELEASE</version> -->
			<!-- </dependency> -->
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>com.vaadin</groupId>
			<!-- Replace artifactId with vaadin-core to use only free components -->
			<artifactId>vaadin-core</artifactId>
			<exclusions>
				<!-- Webjars are only needed when running in Vaadin 13
				compatibility 
					mode -->
				<exclusion>
					<groupId>com.vaadin.webjar</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.insites</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.polymer</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.polymerelements</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.vaadin</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.webcomponents</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring-boot-starter</artifactId>
			<exclusions>
				<!-- Excluding so that webjars are not included. -->
				<exclusion>
					<groupId>com.vaadin</groupId>
					<artifactId>vaadin-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.boot</groupId> -->
		<!-- <artifactId>spring-boot-devtools</artifactId> -->
		<!-- <version>${spring-boot.version}</version> -->
		<!-- <optional>true</optional> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!--https://github.com/GoogleContainerTools/jib/issues/640 -->
		<!--		<dependency>-->
		<!--			<groupId>org.apache.tomcat.embed</groupId>-->
		<!--			<artifactId>tomcat-embed-core</artifactId>-->
		<!--			<version>9.0.60</version>-->
		<!--		</dependency>-->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework</groupId> -->
		<!-- <artifactId>spring-framework-bom</artifactId> -->
		<!-- <version>${spring.version}</version> -->
		<!-- <type>pom</type> -->
		<!-- <scope>import</scope> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<version>${spring-boot.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
			<version>2.2.8.RELEASE</version>
			<!-- <version>${spring-boot.version}</version> -->
		</dependency>
		<dependency>
			<groupId>org.aksw.scaseco.vaadin</groupId>
			<artifactId>vaadin-jena-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aksw.scaseco.vaadin</groupId>
			<artifactId>vaadin-commons</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aksw.scaseco.vaadin</groupId>
			<artifactId>vaadin-jena-rdf-term-editor</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aksw.scaseco.vaadin</groupId>
			<artifactId>vaadin-jena-shacl-editor</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aksw.commons</groupId>
			<artifactId>aksw-commons-index</artifactId>
		</dependency>
		<!-- PDFViewer which hower does not seem to work with flow -->
		<!-- <dependency> -->
		<!-- <groupId>com.whitestein.vaadin.widgets</groupId> -->
		<!-- <artifactId>wt-pdf-viewer</artifactId> -->
		<!-- <version>2.0.1</version> -->
		<!-- </dependency> -->

		<!-- pdf-browser seems to break the vaadin ui -->
		<!--
		<dependency>
			<groupId>org.vaadin.alejandro</groupId>
			<artifactId>pdf-browser</artifactId>
			<version>3.2.0</version>
			</dependency>
		-->
		<!--		<dependency>-->
		<!--			<groupId>com.xdev-software</groupId>-->
		<!--			<artifactId>vaadin-maps-leaflet-flow</artifactId>-->
		<!--			<version>1.1.0</version>-->
		<!--		</dependency>-->
		<!-- https://vaadin.com/directory/component/vstepper -->
		<dependency>
			<groupId>com.mlottmann.VStepper</groupId>
			<artifactId>VStepper</artifactId>
			<version>1.0.9</version>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>leaflet4vaadin</artifactId>
			<version>0.5.0</version>
			<exclusions>
				<!-- Should use 'vaadin-core'; 'vaadin' includes commercial
				components -->
				<exclusion>
					<groupId>com.vaadin</groupId>
					<artifactId>vaadin</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>com.fasterxml.jackson.core</groupId> -->
		<!-- <artifactId>jackson-core</artifactId> -->
		<!-- <version>1.8.0_242</version> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>com.fasterxml.jackson.core</groupId> -->
		<!-- <artifactId>jackson-databind</artifactId> -->
		<!-- <version>1.8.0_242</version> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>com.fasterxml.jackson.core</groupId> -->
		<!-- <artifactId>jackson-annotations</artifactId> -->
		<!-- <version>1.8.0_242</version> -->
		<!-- </dependency> -->
		<!-- The topbraid implementation is used because it uses jena's
		polymorphism 
			system -->
		<dependency>
			<groupId>org.topbraid</groupId>
			<artifactId>shacl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>jena-shacl</artifactId>
		</dependency>
		<!-- Used for user session - should go to vaadin-jena utils -->
		<dependency>
			<groupId>org.aksw.jenax</groupId>
			<artifactId>jenax-models-foaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aksw.jenax</groupId>
			<artifactId>jenax-models-table</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hobbit</groupId>
			<artifactId>facete3-app-shared</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aksw.rmltk</groupId>
			<artifactId>r2rml-resource-shacl</artifactId>
		</dependency>

		<!--		<dependency>-->
		<!--			<groupId>org.vaadin.gatanaso</groupId>-->
		<!--			<artifactId>multiselect-combo-box-flow</artifactId>-->
		<!--			<version>4.0.0-rc2</version>-->
		<!--
			<exclusions>
				<exclusion>
					<groupId>com.vaadin</groupId>
					<artifactId>vaadin-testbench-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.vaadin</groupId>
					<artifactId>flow-html-components-testbench</artifactId>
				</exclusion>
			</exclusions>
			-->
		<!--		</dependency>-->
		<dependency>
			<groupId>org.aksw.jenax</groupId>
			<artifactId>jenax-facete-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aksw.jenax</groupId>
			<artifactId>jenax-arq-datapaths</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.14</version>
		</dependency>
		<!-- Overrides an old cglib version of vaadin -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>3.3.0</version>
		</dependency>
		<!--
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-testbench</artifactId>
			<scope>test</scope>
		</dependency>
		-->
	</dependencies>
	<build>
		<defaultGoal>spring-boot:run</defaultGoal>
		<plugins>
			<!-- https://github.com/appreciated/apexcharts-flow/issues/50 -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>.</directory>
							<includes>
								<include>package.json</include>
								<include>package-lock.json</include>
								<include>webpack.config.js</include>
								<include>webpack.generated.js</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
						<fileset>
							<directory>./node_modules</directory>
							<includes>
								<include>**/**</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>2.2.6.RELEASE</version>
				<!-- Clean build and startup time for Vaadin apps sometimes may
				exceed 
					the default Spring Boot's 30sec timeout. -->
				<configuration>
					<wait>500</wait>
					<maxAttempts>240</maxAttempts>
				</configuration>
			</plugin>
			<!-- Take care of synchronizing java dependencies and imports in
			package.json 
				and main.js files. It also creates webpack.config.js if not exists yet. -->
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-frontend</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>production</id>
			<properties>
				<vaadin.productionMode>true</vaadin.productionMode>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.vaadin</groupId>
						<artifactId>vaadin-maven-plugin</artifactId>
						<version>${vaadin.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>build-frontend</goal>
								</goals>
								<phase>compile</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Profile for creating a bundle - mainly for debugging and analysis -
		e.g. which log files are packaged -->
		<profile>
			<id>bundle</id>
			<build>

				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-shade-plugin</artifactId>
						<!-- <version>3.2.4</version> -->
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>shade</goal>
								</goals>
								<configuration>
									<filters>
										<filter>
											<artifact>*:*</artifact>
											<excludes>
												<exclude>META-INF/*.SF</exclude>
												<exclude>META-INF/*.DSA</exclude>
												<exclude>META-INF/*.RSA</exclude>
											</excludes>
										</filter>
									</filters>
									<transformers>
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
									</transformers>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!--			<version>${vaadin.version}</version> <executions> <execution>
		<goals> <goal>build-frontend</goal> -->
		<!--			</goals> <phase>compile</phase> </execution> </executions>
		</plugin> -->
		<!--		<profile></profile> -->
		<!--		</configuration> </plugin> <plugin> <groupId>com.vaadin</groupId>
		<artifactId>vaadin-maven-plugin</artifactId> -->
		<!--			<version>${vaadin.version}</version> <executions> <execution>
		<goals> <goal>build-frontend</goal> -->
		<!--			</goals> <phase>compile</phase> </execution> </executions>
		</plugin> <plugin> -->
		<!--			<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-war-plugin</artifactId> -->
		<!--			<version>3.2.3</version> <configuration>
		<failOnMissingWebXml>false</failOnMissingWebXml> -->
		<!--			</configuration> </plugin> <plugin>
		<groupId>org.apache.tomcat.maven</groupId> -->
		<!--			<artifactId>tomcat7-maven-plugin</artifactId>
		<version>2.2</version> <configuration> -->
		<!--			<server>TomcatServer</server> <path>/facete3</path>
		</configuration> </plugin> -->
		<!--			</plugins> </build> </profile> -->
		<profile>
			<id>integration-tests</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>start-spring-boot</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop-spring-boot</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- Runs the integration tests (*IT) after the server is
					started -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<trimStackTrace>false</trimStackTrace>
							<enableAssertions>true</enableAssertions>
							<systemPropertyVariables>
								<!-- Pass location of downloaded webdrivers to
								the tests -->
								<webdriver.chrome.driver>
									${webdriver.chrome.driver}</webdriver.chrome.driver>
							</systemPropertyVariables>
						</configuration>
					</plugin>
					<!-- <plugin> <groupId>com.lazerycode.selenium</groupId>
					<artifactId>driver-binary-downloader-maven-plugin</artifactId> 
						<version>1.0.17</version> <configuration>
					<onlyGetDriversForHostOperatingSystem>true 
						</onlyGetDriversForHostOperatingSystem> <rootStandaloneServerDirectory>
					${project.basedir}/drivers/driver 
						</rootStandaloneServerDirectory> <downloadedZipFileDirectory>
					${project.basedir}/drivers/driver_zips 
						</downloadedZipFileDirectory> <customRepositoryMap>
					${project.basedir}/drivers.xml 
						</customRepositoryMap> </configuration> <executions> <execution> < ! - - 
						use phase "none" to skip download step - - >
					<phase>${drivers.downloader.phase}</phase> 
						<goals> <goal>selenium</goal> </goals> </execution> </executions> </plugin> -->
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
